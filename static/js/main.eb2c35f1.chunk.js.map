{"version":3,"sources":["stickyHeader.js","movieList.js","actions.js","mainPage.js","reducers/index.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["StickyHeader","classes","children","restProps","Grid","component","Paper","container","alignItems","class","withCustomStyle","withStyles","setHeight","height","compose","connect","state","totalCount","page","pagesReturned","dispatch","fetchMovieList","data","type","movieList","updatePage","movies","useEffect","fetch","then","response","json","catch","err","console","log","getNextPage","useCallback","onBottom","scrollRef","ref","id","map","movie","i","onError","e","target","onerror","src","alt","name","title","word","length","slice","cardStyle","width","movieNames","useState","searching","setSearching","filterMovies","setFilterMovies","inputSearch","setInputSearch","onSearchTextChange","val","fMovies","filter","f","includes","Card","CardContent","getItemValue","item","items","renderItem","isHighlighted","style","background","padding","value","onChange","onSelect","inputProps","placeholder","wrapperStyle","display","marginRight","onClick","initialstate","fetching","middleware","applyMiddleware","thunk","store","createStore","action","parseInt","concat","content","Set","c","composeWithDevTools","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb2c35f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid, Paper } from '@material-ui/core';\r\n\r\nfunction StickyHeader({ classes, children, ...restProps }) {\r\n  return (\r\n    <Grid\r\n      component={Paper}\r\n      container\r\n      alignItems=\"baseline\"\r\n      class = 'sticky z-1000 bg-black justify-items-center'\r\n      {...restProps}\r\n    >\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default StickyHeader;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { BottomScrollListener } from 'react-bottom-scroll-listener';\r\n\r\nimport { connect } from 'react-redux';\r\nimport compose from 'recompose/compose';\r\n\r\nimport {\r\n    withStyles\r\n  } from '@material-ui/core';\r\nimport { movieList, updatePage } from './actions';\r\nconst withCustomStyle = withStyles(() => ({\r\n    setHeight : {\r\n      height: '94vh'\r\n    }\r\n  }));\r\n\r\nfunction MovieList({\r\n    classes, \r\n    fetchMovieList, \r\n    movies, \r\n    page,\r\n    totalCount, \r\n    pagesReturned, \r\n    updatePage}) {\r\n\r\n    useEffect(() => {\r\n      fetch(`./api/contentpage${page}.json`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        fetchMovieList(data.page)\r\n      })\r\n      .catch((err) => console.log(err))\r\n    }, [page])\r\n\r\n    const getNextPage = useCallback(() => {\r\n      if(pagesReturned <= totalCount){\r\n        updatePage()\r\n      }\r\n    }, [pagesReturned])\r\n\r\n    const breakWord = word => {\r\n      if(word.length <= 11) return word\r\n      return `${word.slice(0,9)}...`\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n          <BottomScrollListener onBottom={getNextPage}>\r\n            {(scrollRef) => \r\n              <div ref={scrollRef} id='movieList' class={`container mx-auto overflow-y-auto ${classes.setHeight}`}>\r\n                {\r\n                  movies.map((movie,i) => ( \r\n                  <div class=\"inline-block pl-2 w-34 h-40 \" key = {`main_${movie['poster-image']}_${i}}`}>\r\n                      <div class=\"bg-black overflow-hidden py-2\" key={`${movie['poster-image']}_${i}`}>\r\n                          <img data-src={`./slices/${movie['poster-image']}`}  onError={(e)=>{e.target.onerror = null; e.target.src=\"./slices/placeholder_for_missing_posters.png\"}}\r\n                          src= {`./slices/${movie['poster-image']}`} \r\n                          class=\"image-lazy w-34 h-40\" alt={movie.name}/>\r\n                          <div class=\"pr-2 pb-2 pt-2\">\r\n                              <span class=\"text-left text-white font-light\" title = {`${movie.name}`}>{breakWord(movie.name)}</span>\r\n                          </div>\r\n                      </div>\r\n                  </div> \r\n            ))}\r\n              </div>\r\n            }\r\n          </BottomScrollListener>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapState = state => {\r\n    return {\r\n        totalCount: state.totalCount,\r\n        page: state.page,\r\n        pagesReturned: state.pagesReturned\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchMovieList: (data) => dispatch(movieList(data)),\r\n    updatePage: () => dispatch(updatePage())\r\n  }\r\n}\r\n\r\nexport default compose (\r\n  (withCustomStyle),\r\n  connect(mapState,mapDispatchToProps)\r\n) (MovieList);","export function movieList(data) {\r\n    return dispatch => {\r\n        dispatch({       \r\n            type: 'FETCH_MOVIE_LIST',\r\n            data\r\n        })\r\n    };\r\n  }\r\n  \r\n  export function updatePage(data) {\r\n    return dispatch => {\r\n        dispatch({       \r\n            type: 'NEXT_PAGE'\r\n        })\r\n    };\r\n  }","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    withStyles,\r\n    Card,\r\n    CardContent\r\n  } from '@material-ui/core';\r\nimport StickyHeader from './stickyHeader';\r\nimport MovieList from './movieList';\r\nimport Autocomplete from 'react-autocomplete'\r\nimport { connect } from 'react-redux';\r\nimport compose from 'recompose/compose';\r\n\r\nconst withCustomStyle = withStyles(() => ({  \r\n    cardStyle: {\r\n        width: '27.7%'\r\n      }\r\n  }));\r\n\r\nfunction MainPage({classes, movieNames, movies}) {\r\n  const [searching, setSearching] = useState(false)\r\n  const [filterMovies, setFilterMovies] = useState([])\r\n  const [inputSearch, setInputSearch] = useState('')\r\n\r\n  useEffect(() => {\r\n    setFilterMovies(movies)\r\n  }, [movies])\r\n\r\n  const onSearchTextChange = val => {\r\n      setInputSearch(val)\r\n      const fMovies = movies.filter(f => f.name.includes(val))\r\n      setFilterMovies(fMovies)\r\n  }\r\n\r\n  const onHandleSearch = () => {\r\n    setSearching(!searching)\r\n    if(!searching === false) setFilterMovies(movies)\r\n    setInputSearch('')\r\n  }\r\n    return (\r\n        <div>\r\n        <header class = 'flex flex-col items-center justify-items-center'>\r\n          <Card class = {`bg-black rounded-none h-screen ${classes.cardStyle}`}>\r\n            <CardContent class= {'p-px'}>\r\n                <StickyHeader>\r\n                  <div class= 'w-screen h-8 mt-2 flex flex-row'>       \r\n                    <img src='./slices/back.png' class = \"w-8 mr-4\" alt='Back'/>\r\n                    {\r\n                      searching ?\r\n                      <Autocomplete\r\n                        id='autocomplete'\r\n                        getItemValue={(item) => item}\r\n                        items={movieNames}\r\n                        renderItem={(item, isHighlighted) =>\r\n                          <div style={{ background: isHighlighted ? 'lightgray' : 'white', padding: '3px' }}>\r\n                            {item}\r\n                          </div>\r\n                        }\r\n                        value={inputSearch}\r\n                        onChange={(e) => onSearchTextChange(e.target.value)}\r\n                        onSelect={(val) => onSearchTextChange(val)}\r\n                        inputProps = {{ placeholder: 'Search Movie Here...', style: {width: '16rem'} }}\r\n                        wrapperStyle = {{display: 'inline-flex', width: '16rem', marginRight: '6px'}}\r\n                    /> \r\n                    : <span class=\"font-normal text-white text-lg mr-32\">Romantic Comedy</span>\r\n                    }\r\n                    \r\n                    <img src='./slices/search.png' class = 'w-8' alt='Search' onClick={onHandleSearch}/>\r\n                  </div>\r\n                </StickyHeader>\r\n                <MovieList movies= {filterMovies}/>\r\n            </CardContent>\r\n          </Card>\r\n        </header>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapState = state => {\r\n  return {\r\n      movieNames : state.movieNames,\r\n      movies : state.movieList\r\n  }\r\n}\r\nexport default compose (\r\n(withCustomStyle),\r\nconnect(mapState)\r\n) (MainPage);","const initialstate = {\n    movieList: [],\n    totalCount : 0,\n    fetching : false,\n    page : 1,\n    pagesReturned : 0,\n    movieNames : []\n  };\n\n  export const mainReducer = (state = initialstate, action) => {\n    switch (action.type) {\n      case 'FETCH_MOVIE_LIST':\n        return {\n          ...state,\n          totalCount: parseInt(action.data['total-content-items']),\n          movieList :  state.movieList.concat(action.data['content-items'].content),\n          movieNames : [...new Set([...state.movieNames, ...action.data['content-items'].content.map(c => c.name)])] ,\n          pagesReturned : state.pagesReturned + parseInt(action.data['page-size-returned'])\n        }\n      case 'FETCHING_IMAGES':\n        return { ...state, fetching: action.fetching }\n      case 'NEXT_PAGE':\n        return { ...state, page: state.page + 1}\n      default:\n        return state;\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {mainReducer} from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst middleware = applyMiddleware(thunk);\nconst store = createStore(\n    mainReducer, composeWithDevTools(middleware)\n);\n\nexport default store;\n","import './App.css';\nimport MainPage from './mainPage';\nimport {Provider} from \"react-redux\";\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store = {store}>     \n      <MainPage/>\n   </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}